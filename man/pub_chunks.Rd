% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chunks.R
\name{pub_chunks}
\alias{pub_chunks}
\title{Extract chunks of data from articles}
\usage{
pub_chunks(x, provider, sections = "all")
}
\arguments{
\item{x}{A file path for an XML file, or a character string of XML,
or an object of class \code{fulltext::ft_data}, the output from a call to
\code{\link[fulltext:ft_get]{fulltext::ft_get()}}}

\item{provider}{(character) the publisher. a single option only. see
\code{\link[=pub_providers]{pub_providers()}} for options. required. If you select the wrong provider
for the XML you have you may or may not get what you need :)}

\item{sections}{(character) What elements to get, can be one or more in
a vector or list. See \code{\link[=pub_sections]{pub_sections()}} for options. optional. Default is
to get all sections. See Details.}
}
\value{
A list, named by the section selected. sections not found or
not in accepted list return \code{NULL}
}
\description{
\code{pub_chunks} makes it easy to extract sections of an article.
You can extract just authors across all articles, or all references
sections, or the complete text of each article. Then you can pass the
output downstream for visualization and analysis.
}
\details{
Options for the \code{sections} parameter:
\itemize{
\item front - Publisher, journal and article metadata elements
\item body - Body of the article
\item back - Back of the article, acknowledgments, author contributions,
references
\item title - Article title
\item doi - Article DOI
\item categories - Publisher's categories, if any
\item authors - Authors
\item keywords - Keywords
\item abstract - Article abstract
\item executive_summary - Article executive summary
\item refs - References
\item refs_dois - References DOIs - if available
\item publisher - Publisher name
\item journal_meta - Journal metadata
\item article_meta - Article metadata
\item acknowledgments - Acknowledgments
\item permissions - Article permissions
\item history - Dates, recieved, published, accepted, etc.
}

Note that we currently only support PLOS, eLife, Entrez, and Elsevier;
more to come.
}
\examples{
\dontrun{
# a file path to an XML file
x <- system.file("examples/10_1016_s1569_1993_15_30039_4.xml", 
  package = "pubchunks")
x <- system.file("examples/10_1016_0021_8928_59_90156_x.xml", 
  package = "pubchunks")
pub_chunks(x, "elsevier", "abstract")
cat(pub_chunks(x, "elsevier", "abstract")[[1]])
pub_chunks(x, "elsevier", "title")
pub_chunks(x, "elsevier", "authors")
pub_chunks(x, "elsevier", "acknowledgments")
pub_chunks(x, "elsevier", "refs")
pub_chunks(x, "elsevier", c("title", "refs"))

# works the same with the xml already in a string
xml <- paste0(readLines(x), collapse = "")
pub_chunks(xml, "elsevier", "title")

# also works if you've already read in the XML (with xml2 pkg)
xml <- paste0(readLines(x), collapse = "")
xml <- xml2::read_xml(xml)
pub_chunks(xml, "elsevier", "title")

# using output of fulltext::ft_get()
if (requireNamespace("fulltext")) {
  x <- fulltext::ft_get('10.1371/journal.pone.0086169', from='plos')
  pub_chunks(fulltext::ft_collect(x), sections="authors")
}

# Hindawi
x <- system.file("examples/hindawi_1.xml", package = "pubchunks")
pub_chunks(x, "hindawi", "abstract")
pub_chunks(x, "hindawi", "title")
pub_chunks(x, "hindawi", c("abstract", "title", "authors", "refs"))

# Pensoft
x <- system.file("examples/pensoft_1.xml", package = "pubchunks")
pub_chunks(x, "pensoft", "abstract")
pub_chunks(x, "pensoft", "title")
pub_chunks(x, "pensoft", c("abstract", "title", "authors", "refs"))

# Peerj
x <- system.file("examples/peerj_1.xml", package = "pubchunks")
pub_chunks(x, "peerj", "abstract")
pub_chunks(x, "peerj", "title")
pub_chunks(x, "peerj", c("abstract", "title", "authors", "refs"))

# Copernicus
x <- system.file("examples/copernicus_2.xml", package = "pubchunks")
pub_chunks(x, "copernicus", c("doi", "abstract", "title", "authors", "refs"))

# Frontiers
x <- system.file("examples/frontiers_1.xml", package = "pubchunks")
pub_chunks(x, "frontiers", c("doi", "abstract", "title", "authors", "refs"))

}
}
